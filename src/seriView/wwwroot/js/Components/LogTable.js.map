{"version":3,"sources":["Components/LogTable.ts"],"names":[],"mappings":"AAAA,OAAO,GAAoB,MAAM,KAAK,CAAA;AAEtC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE;IACvB,QAAQ,EAAE,eAAe;IACzB,IAAI,EAAE;QACF,OAAO;YACH,YAAY,EAAE,CAAC;YACf,SAAS,EAAE,EAAE;SAChB,CAAC;IACN,CAAC;IAED,KAAK,EAAE;QACH,UAAU,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAA6B;QACtE,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAA0B;KAC3D;IAED,KAAK,EAAE;QACH,SAAS,EAAE,UAAU,OAAO;YACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC;KACJ;IAED,OAAO,EAAE;QACL,SAAS,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC;QACD,YAAY,EAAE;YACV,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBACvB,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;QACL,CAAC;QACD,QAAQ,EAAE;YACN,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;QACL,CAAC;QACD,gBAAgB,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACtE,CAAC;KACJ;CACJ,CAAC,CAAC","file":"LogTable.js","sourcesContent":["import Vue, { PropOptions } from 'vue'\r\n\r\nVue.component(\"log-table\", {\r\n    template: \"#logTableTmpl\",\r\n    data: function () {\r\n        return {\r\n            current_page: 1,\r\n            page_size: 50\r\n        };\r\n    },\r\n\r\n    props: {\r\n        pr_logdata: { type: Array, required: true } as PropOptions<LogEntry[]>,\r\n        pr_is_loading: { type: Boolean } as PropOptions<Boolean>\r\n    },\r\n\r\n    watch: {\r\n        page_size: function (newSize) {\r\n            this.pageValueChanged();\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        firstPage: function () {\r\n            this.current_page = 1;\r\n            this.pageValueChanged();\r\n        },\r\n        previousPage: function () {\r\n            if (this.current_page > 1) {\r\n                this.current_page--;\r\n                this.pageValueChanged();\r\n            }\r\n        },\r\n        nextPage: function () {\r\n            if (this.pr_logdata.length >= this.page_size) {\r\n                this.current_page++;\r\n                this.pageValueChanged();\r\n            }\r\n        },\r\n        pageValueChanged: function () {\r\n            this.$emit(\"em_page_change\", [this.current_page, this.page_size]);\r\n        }\r\n    }\r\n});"]}