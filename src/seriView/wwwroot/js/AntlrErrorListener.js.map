{"version":3,"sources":["AntlrErrorListener.ts"],"names":[],"mappings":"AAAA;IAAA;QACY,WAAM,GAAa,EAAE,CAAC;IAclC,CAAC;IAZG,sBAAI,wCAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,CAAC;;;OAAA;IAED,kCAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,wCAAW,GAAX,UAAY,UAAe,EAAE,MAAW,EAAE,IAAY,EAAE,GAAW,EAAE,GAAW,EAAE,oBAAyB;QACvG,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IACL,yBAAC;AAAD,CAfA,AAeC,IAAA","file":"AntlrErrorListener.js","sourcesContent":["class AntlrErrorListener {\r\n    private errors: string[] = [];\r\n\r\n    get hasError(): boolean {\r\n        return this.errors.length > 0;\r\n    }\r\n\r\n    reset(): void {\r\n        this.errors = [];\r\n    }\r\n\r\n    syntaxError(recognizer: any, symbol: any, line: number, col: number, msg: string, recognitionException: any) {\r\n        console.debug(\"syntax error\");\r\n        this.errors.push(msg);\r\n    }\r\n}"]}